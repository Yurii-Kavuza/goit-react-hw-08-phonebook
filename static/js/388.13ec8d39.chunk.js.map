{"version":3,"file":"static/js/388.13ec8d39.chunk.js","mappings":"0OAAaA,EAAe,SAAAC,GAAK,OAAIA,EAAMC,MAAV,ECEpBC,EAAgB,SAAAF,GAAK,OAAIA,EAAMG,SAASC,OAAnB,EAErBC,EAAoB,SAAAL,GAAK,OAAIA,EAAMG,SAASG,KAAnB,EAEzBC,EAAwB,SAAAP,GACnC,IAAMG,EAAWE,EAAkBL,GAE7BQ,EADST,EAAaC,GACIS,cAChC,cAAON,QAAP,IAAOA,OAAP,EAAOA,EAAUF,QAAO,SAAAS,GAAO,OAC7BA,EAAQC,KAAKF,cAAcG,SAASJ,EADP,GAGhC,E,6BCXYK,EAAOC,EAAAA,EAAAA,IAAH,6IAGR,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGW,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAITC,EAAQJ,EAAAA,EAAAA,GAAH,sB,SCElB,EAXgB,SAAC,GAAD,IAAGK,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,UAACP,EAAD,YACE,SAACK,EAAD,UAAQC,IACPC,IAHW,E,iDCAHC,EAAQP,EAAAA,EAAAA,MAAH,kJAGT,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEW,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAITK,GAAUR,EAAAA,EAAAA,GAAOS,EAAAA,GAAPT,CAAH,gLAMP,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACF,SAAAF,GAAC,OAAIA,EAAEC,MAAMQ,QAAQC,MAApB,IAA8B,SAAAV,GAAC,OAAIA,EAAEC,MAAMU,OAAOC,KAAnB,IAG/BC,EAASd,EAAAA,EAAAA,OAAH,8NAEA,SAAAC,GAAC,OAAIA,EAAEC,MAAMa,MAAMJ,MAAlB,IAIX,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGc,SAAAF,GAAC,OAAIA,EAAEC,MAAMU,OAAOI,SAAnB,IACZ,SAAAf,GAAC,OAAIA,EAAEC,MAAMU,OAAOK,KAAnB,IC4Cd,EApEoB,WAClB,IAAMC,EAASC,EAAAA,KAAaC,MAAM,CAChCvB,KAAMsB,EAAAA,KAAaE,WACnBC,OAAQH,EAAAA,KAAaE,aAGjBE,GAAWC,EAAAA,EAAAA,MACXnC,GAAWoC,EAAAA,EAAAA,IAAYlC,GAGvBmC,EAAgB,mCAAG,WAAOC,EAAP,qFAAiBC,EAAjB,EAAiBA,UAChC/B,EAAiB8B,EAAjB9B,KAAMyB,EAAWK,EAAXL,OACRO,EAAkBxC,EAASyC,MAC/B,SAAAlC,GAAO,OAAIA,EAAQC,KAAKF,gBAAkBE,EAAKF,aAAxC,IAGHoC,EAAoB1C,EAASyC,MACjC,SAAAlC,GAAO,OAAIA,EAAQ0B,OAAO3B,gBAAkB2B,EAAO3B,aAA5C,KAGLkC,EAVmB,yCAWdG,MAAM,GAAD,OAAInC,EAAJ,8BAXS,WAcnBkC,EAdmB,yCAedC,MAAM,GAAD,OAAIV,EAAJ,8BAfS,cAkBvBW,QAAQC,IAAR,kBAAuBrC,EAAvB,iCAAoDyB,IAlB7B,UAmBjBC,GAASY,EAAAA,EAAAA,IAAW,CAAEtC,KAAAA,EAAMyB,OAAAA,KAnBX,QAoBvBM,IApBuB,4CAAH,wDAuBtB,OACE,SAAC,KAAD,CACEQ,cA1BkB,CAAEvC,KAAM,GAAIyB,OAAQ,IA2BtCe,SAAUX,EACVY,iBAAkBpB,EAHpB,UAKE,UAACV,EAAD,YACE,UAACD,EAAD,mBAEE,SAAC,KAAD,CACEgC,KAAK,OACL1C,KAAK,OACL2C,QAAQ,yHACRnC,MAAM,yIACNgB,UAAQ,KAEV,SAAC,KAAD,CAAcxB,KAAK,aAErB,UAACU,EAAD,qBAEE,SAAC,KAAD,CACEgC,KAAK,MACL1C,KAAK,SACL2C,QAAQ,yFACRnC,MAAM,gGACNgB,UAAQ,KAEV,SAAC,KAAD,CAAcxB,KAAK,eAErB,SAACiB,EAAD,CAAQyB,KAAK,SAAb,6BAIP,ECxEYE,EAAWzC,EAAAA,EAAAA,GAAH,8HAEH,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEE,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAITW,EAASd,EAAAA,EAAAA,OAAH,+CACF,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,ICyBlB,EA9BoB,WAClB,IAAMoB,GAAWC,EAAAA,EAAAA,MACXkB,EAAsB,SAAAC,GAAE,OAAIpB,GAASqB,EAAAA,EAAAA,IAAcD,GAA3B,EAExBE,GAAkBpB,EAAAA,EAAAA,IAAYhC,GAEpC,OACG,wBACIoD,EAAgBC,KAAI,YAA2B,IAAxBH,EAAuB,EAAvBA,GAAI9C,EAAmB,EAAnBA,KAAMyB,EAAa,EAAbA,OAChC,OACE,UAACmB,EAAD,WACG5C,EADH,KACWyB,GACT,SAAC,EAAD,CAAQyB,QAASL,EAAoBC,GAArC,sBAFaA,EAKlB,KAGR,E,UCWD,EA7Be,WACb,IAAMpB,GAAWC,EAAAA,EAAAA,MACXrC,GAASsC,EAAAA,EAAAA,IAAYxC,GAM3B,OACE,0BACE,UAACsB,EAAD,oCAEE,kBACEgC,KAAK,OACL1C,KAAK,SACLmD,MAAO7D,EACP8D,SAZS,SAAAC,GACf3B,GAAS4B,EAAAA,EAAAA,GAAUD,EAAEE,cAAcJ,OACpC,EAWOK,aAAa,YAKtB,EClBc,SAASC,IACtB,IAAM/B,GAAWC,EAAAA,EAAAA,MACX+B,GAAY9B,EAAAA,EAAAA,IAAYrC,GAM9B,OAJAoE,EAAAA,EAAAA,YAAU,WACRjC,GAASkC,EAAAA,EAAAA,MACV,GAAE,CAAClC,KAGF,iCACE,SAACmC,EAAA,EAAD,WACE,gDAEF,SAAC,EAAD,CAASrD,MAAO,YAAhB,UACE,SAAC,EAAD,OAEF,UAAC,EAAD,CAASA,MAAO,WAAhB,WACE,SAAC,EAAD,KACA,yBAAMkD,GAAa,4BACnB,SAAC,EAAD,SAIP,C","sources":["redux/filter/selectors.js","redux/contacts/selectors.js","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectFilter = state => state.filter;\n","import { selectFilter } from 'redux/filter/selectors';\n\nexport const selectLoading = state => state.contacts.loading;\n\nexport const selectAllContacts = state => state.contacts.items;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectAllContacts(state);\n  const filter = selectFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Part = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[4]}px;\n\n  :not(:last-child) {\n    margin-bottom: ${p => p.theme.space[5]}px;\n  }\n`;\n\nexport const Title = styled.h2``;\n","import PropTypes from 'prop-types';\nimport { Part, Title } from './Section.styled';\n\nconst Section = ({ title, children }) => (\n  <Part>\n    <Title>{title}</Title>\n    {children}\n  </Part>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import styled from '@emotion/styled';\nimport { Form } from 'formik';\n\nexport const Label = styled.label`\n  display: inline-flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[2]}px;\n  :not(:last-child) {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n  width: 400px;\n  padding: ${p => p.theme.space[3]}px;\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.black};\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  border-radius: ${p => p.theme.radii.normal};\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  gap: ${p => p.theme.space[2]}px;\n\n  :hover {\n    background-color: ${p => p.theme.colors.secondary};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n","import React from 'react';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { Button, Label, FormBox } from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAllContacts } from 'redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const schema = yup.object().shape({\n    name: yup.string().required(),\n    number: yup.number().required(),\n  });\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n\n  const initialValues = { name: '', number: '' };\n  const handleAddContact = async (values, { resetForm }) => {\n    const { name, number } = values;\n    const isDuplicateName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    const isDuplicateNumber = contacts.find(\n      contact => contact.number.toLowerCase() === number.toLowerCase()\n    );\n\n    if (isDuplicateName) {\n      return alert(`${name} is already in contacts.`);\n    }\n\n    if (isDuplicateNumber) {\n      return alert(`${number} is already in contacts.`);\n    }\n\n    console.log(`Name is ${name} and number number is ${number}`);\n    await dispatch(addContact({ name, number }));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleAddContact}\n      validationSchema={schema}\n    >\n      <FormBox>\n        <Label>\n          Name\n          <Field\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <ErrorMessage name=\"name\" />\n        </Label>\n        <Label>\n          Number\n          <Field\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <ErrorMessage name=\"number\" />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </FormBox>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  list-style: inside;\n  padding-left: ${p => p.theme.space[5]}px;\n  :not(:last-child) {\n    margin-bottom: ${p => p.theme.space[4]}px;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-left: ${p => p.theme.space[4]}px;\n`;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { Button, ListItem } from './ContactList.styled';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const handleDeleteContact = id => dispatch(deleteContact(id));\n\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n     <ul>\n        {visibleContacts.map(({ id, name, number }) => {\n          return (\n            <ListItem key={id}>\n              {name}: {number}\n              <Button onClick={handleDeleteContact(id)}>Delete</Button>\n            </ListItem>\n          );\n        })}\n      </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport { Label } from 'components/ContactForm/ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/filter/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const onFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <div>\n      <Label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={onFilter}\n          autoComplete=\"off\"\n        />\n      </Label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onFilter: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport Section from 'components/Section';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Section title={'Phonebook'}>\n        <ContactForm />\n      </Section>\n      <Section title={'Contacts'}>\n        <Filter />\n        <div>{isLoading && 'Request in progress...'}</div>\n        <ContactList />\n      </Section>\n    </>\n  );\n}\n"],"names":["selectFilter","state","filter","selectLoading","contacts","loading","selectAllContacts","items","selectVisibleContacts","normalizedFilter","toLowerCase","contact","name","includes","Part","styled","p","theme","space","Title","title","children","Label","FormBox","Form","borders","normal","colors","black","Button","radii","secondary","white","schema","yup","shape","required","number","dispatch","useDispatch","useSelector","handleAddContact","values","resetForm","isDuplicateName","find","isDuplicateNumber","alert","console","log","addContact","initialValues","onSubmit","validationSchema","type","pattern","ListItem","handleDeleteContact","id","deleteContact","visibleContacts","map","onClick","value","onChange","e","setFilter","currentTarget","autoComplete","Contacts","isLoading","useEffect","fetchContacts","Helmet"],"sourceRoot":""}